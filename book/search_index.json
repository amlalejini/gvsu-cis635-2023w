[["index.html", "GVSU CIS 635 - Knowledge Discovery and Data Mining (Winter 2023) Chapter 1 Introduction", " GVSU CIS 635 - Knowledge Discovery and Data Mining (Winter 2023) Instructor: Dr. Alexander Lalejini 2023-01-16 Chapter 1 Introduction This website contains some of the course materials for Winter 2023 CIS 635 Section 02 at Grand Valley State University. "],["homework-1.html", "Chapter 2 Homework 1 2.1 Overview 2.2 Part A. Syllabus 2.3 Part B. Attribute descriptions 2.4 Part C. Thinking about common data mining applications", " Chapter 2 Homework 1 2.1 Overview 2.1.1 Objectives Read through the course syllabus Identify nominal versus ordinal attributes Consider general data mining tasks 2.1.2 Grading Uploaded requested files, 5% File is properly/clearly formatted, 5% Proper section headers for each part of your homework. You clearly indicate which question each of your responses are associated with. Part A., 10% Part B., 30% Part C., 50% 2.1.3 Deliverables .pdf file with your responses 2.1.4 Formatting In the document that you turn in for this homework, include a heading for each Part (Part A, Part B, Part C). Ensure that you clearly indicate which question each of your responses are associated with. 2.2 Part A. Syllabus Read the course syllabus (posted on blackboard). For this question (on the document that you turn in), confirm that you have read the syllabus. Read the academic honesty policy for the GVSU School of Computing: https://www.gvsu.edu/computing/academic-honesty-30.htm. For this question (on the document that you turn in), confirm that you have read and agree to abide by the academic honesty policy. 2.3 Part B. Attribute descriptions You are given a data file (see assignment attachments on blackboard): hw01data.csv. This is a table of ratings for teaching assistants (TA) at some university (this is modified data that originally came from https://archive.ics.uci.edu/ml/datasets.php). There are 6 attributes: id: unique number to identify each rating instructor: id number that identifies the instructor classNbr: id number that identifies the course semester: 1=summer, 2=fall, 3=winter classSize: number of students in the class rating: 1=low, 2=medium, 3=high For each attribute, describe whether it is nominal or ordinal. id instructor classNbr semester classSize rating 2.4 Part C. Thinking about common data mining applications This question asks you to think about clustering. Considering an average kitchen, identify 4 clusters of objects. Name them according to their utility. For example, if I were asked to identify 4 clusters in a sporting goods store, I might choose apparel (e.g., shoes, shirts), containers (e.g., backpacks, coolers), sports equipment (e.g., basketball, tennis racquets), and fishing (e.g., rods, lures). Pick one of the following forms of predictive modeling: regression, classification, or ranking. Describe an application domain or a dataset where you think it would be useful to apply the chosen predictive modeling approach. What attribute(s) would you be predicting? What attributes would you use to make the prediction? "],["getting-started-with-r-markdown.html", "Chapter 3 Getting Started with R Markdown 3.1 Dependencies 3.2 Create a new R Markdown document in RStudio 3.3 Anatomy of an R Markdown document 3.4 “Knitting” 3.5 Resources", " Chapter 3 Getting Started with R Markdown R markdown documents are a way to interweave markdown with R. This enables us to write nicely formatted documents with R code (and output from your R code) embedded directly in the document. Find examples of compiled R markdown documents here: https://rmarkdown.rstudio.com/gallery.html In fact, this page is generated with R Markdown! Source code for this page here. 3.1 Dependencies To use R markdown, you’ll need to install the following packages: markdown and rmarkdown. You should also want to go ahead and install the tinytex package (+ install TinyTex) to be able generate PDF output from your R Markdown documents. See the instructions below! 3.1.1 Installing R packages As previously mentioned, there are many R packages (&gt; 18,000!) with all sorts of useful functionality. To install an R package, use the install.packages function in your R console (e.g., in RStudio). Run ?install.packages in your R console to read its help page. To install the markdown and rmarkdown packages, run the following command in your R console: install.packages(c(&quot;markdown&quot;, &quot;rmarkdown&quot;)) Once the installations finish, you should be able to run the following two commands without errors: library(markdown) library(rmarkdown) For this class, you’ll also need to be able to generate PDF output from your R Markdown documents. To do so, you’ll need to instal LaTex (if you’re not sure what that is, no worries!). Run the following two commands in your R console in RStudio: install.packages(&#39;tinytex&#39;) tinytex::install_tinytex() 3.2 Create a new R Markdown document in RStudio Click the new file button in the top right of the RStudio window, and select R Markdown. In RStudio, you should get a pop-up for creating a new r markdown document. For now, there are two relevant options: Click the “Create Empty Document” in the bottom left of the popup. This will create an empty R markdown file for you. Fill out the title, author (you!), and date fields and press “Okay”. This will create a new R markdown file, but RStudio will initialize your file with a bunch of stuff (this stuff is helpful information, but you will want to delete it all for any assignments in this class). 3.3 Anatomy of an R Markdown document There are three basic components in an R Markdown document: the metadata, text, and code. Here’s the contents for a minimal R Markdown document (from https://bookdown.org/yihui/rmarkdown/basics.html): An R Markdown document should be a plain text file (i.e., don’t try to write one in google docs or microsoft word!) and conventionally has the .Rmd file extension. 3.3.1 Frontmatter (metadata) The metadata (or the frontmatter) specifies how your R Markdown should be compiled. E.g., the output file type, whether to include a table of contents, etc. The metadata should be written between a pair of three dashes --- at the top of your document (see minimal example). For now, don’t worry too much about what you should include in your document metadata. For the most part, you can just use what RStudio includes in your document. 3.3.2 Text The body of your document follows the metadata. Any text (i.e., everything that isn’t code) you include in your document should follow markdown syntax. If you’re not already familiar with markdown, read over this: https://www.markdownguide.org/getting-started. For basic markdown syntax, see: https://www.markdownguide.org/basic-syntax/. Being familiar with basic syntax should be just about everything you need for your homework assignments in this class. For more advanced markdown syntax, see: https://www.markdownguide.org/extended-syntax/. You can also refer to Section 2.5 in R Markdown: The Definitive Guide for more info on markdown. 3.3.3 Code In general, you can include code in your R Markdown documents in two ways: Inline code begin with `r and end with a `. E.g., 2 would render the result of log(4, base=2) inline. You can include a “code chunk” inside your R Markdown document. A code chunk begins with three backticks ```{r} and end with three backticks (see minimal example above for an example). There are many options tha tyou can specify in the {} at the beginning of a code chunk. See https://yihui.org/knitr/options/ for details. 3.4 “Knitting” To compile an R Markdown document into a PDF or HTML file, you need to “Knit” it. In RStudio, this is pretty straightforward. Just click the “Knit” button on your document in RStudio. 3.5 Resources R Markdown: The Definitive Guide Code chunk options: https://yihui.org/knitr/options/ "],["homework-2.html", "Chapter 4 Homework 2 4.1 Overview 4.2 Setup 4.3 Part A. Use R as a calculator 4.4 Part B. Built-in Functions 4.5 Part C. Creating vectors 4.6 Part D. Subsetting vectors 4.7 Part E. Types of data", " Chapter 4 Homework 2 4.1 Overview This goal of this homework is as follows: Give you an opportunity to practice some R programming basics Make sure you are comfortable with using markdown syntax to format an R markdown document Make sure you are comfortable creating and knitting an R markdown document into a pdf I recommend that you get started with this assignment early so that you can come to office hours to get help with any issues you have knitting your Rmd document into a pdf. 4.1.1 Grading Uploaded requested files, 10% File is properly/clearly formatted, 10% Proper section headers for each part of your homework You clearly indicate which question each of your responses is associated with Look at your compiled pdf before submitting it. Make sure it looks well-formatted. For this assignment, formatting is particularly important because it’s something you’ll need to know how to do well in R markdown going forward. Programming questions: 80%, all weighted evenly 4.1.2 Deliverables .pdf file (generated by knitting your .Rmd file) .Rmd file (used to generate your pdf file) 4.2 Setup Make sure you have access to a computer with R and RStudio installed (with the ability to install new packages). If you do not, let me know as soon as possible! If you have not done so already, install R and RStudio (step-by-step guides provided in week 1 course content). I strongly encourage you to stay organized. I recommend that you directory on your computer where you can save all of your work for this class (e.g., “cis635” would make for a good name). Within that directory, I recommend keeping each of your homework assignments and projects separated into their own directories. For example, I might organize things as follows: cis635/ homeworks/ hw01 hw02 ... project/ ... Create a new R Markdown file with the title “Homework 2” and with you as the author (hint: this information will go into your R Markdown frontmatter at the top of the file). In your R markdown file, create a section heading for each of the following parts of your homework: Part A. Use R as a calculator Part B. Built-in Functions Part C. Creating vectors Part D. Subsetting vectors Part E. Types of data 4.3 Part A. Use R as a calculator Under your Part A heading, write one code chunk for each of the following calculations: \\[ 1+2(3+4) \\] \\[ log_2(4^3 + 3^{2+1}) \\] \\[ \\sqrt{(4+3)(2+1)} \\] For example, if the calculation is 2 + 2, your code chunk should look something like this when your R Markdown document is compiled: 2+2 ## [1] 4 I want to see each equation translated directly into code. Do not simplify any of the calculations (e.g., 2+1 should be 2+1 in your code, not 3). 4.4 Part B. Built-in Functions A built-in function is one that comes pre-loaded in R (you don’t need to install and load a package to use). To learn how to use a built-in loaded function that you don’t know how to use appropriately, use the help() function. help() takes one parameter, the name of the function that you want information about (e.g., help(abs)). Instead of the help function, you could also use enter ? and then the name of the function in your R console (e.g., ?abs). Familiarize yourself with the built-in functions abs(), round(), sqrt(), tolower(), and toupper(). Under your Part B heading, use these built-in functions to write code that prints the following items (put each of these into a different code chunk in your R Markdown document): The absolute value of -15.5. 4.483847 rounded to one decimal place. The function round() takes two arguments, the number to be rounded and the number of decimal places. “species” in all capital letters. “SPECIES” in all lower case letters. 4.5 Part C. Creating vectors Under your Part C heading, Create the following vectors using just seq() and/or rep(). (don’t use c()) Positive integers from 1 to 99 Odd integers between 1 and 99 The numbers 1,1,1,2,2,2,3,3,3 (hint: read the help pages for seq and rep!) 4.6 Part D. Subsetting vectors Under your Part D heading, use subsetting syntax (square brackets) to write code that completes the following using the vector y. y &lt;- c(3,2,15,-1,22,1,9,17,5) Display only the first value of y. Display the last value of y, in a way that would work if y were any length. (hint: ?length) Display only the values in y that are greater than the mean of y. 4.7 Part E. Types of data Under your part E heading, using the vector y write code that completes the following tasks: y &lt;- c(3,2,15,-1,22,1,9,17,5) Make a logical (TRUE/FALSE) vector describing which values in y are positive. Make a logical vector describing whether any of the values of y are equal to the mean of y. Coerce the vector you just made (in #2 above) from a logical vector to a character vector. Make a logical vector describing whether any of the values of y are equal to the median of y. Coerce the vector you just made (in #4 above) into a categorial vector (using factor()). Make a matrix with 4 rows and 3 columns that looks like this: ## [,1] [,2] [,3] ## [1,] 1 2 3 ## [2,] 4 5 6 ## [3,] 7 8 9 ## [4,] 10 11 12 Coerce that matrix into a dataframe. "],["final-project-overview.html", "Chapter 5 Final project overview 5.1 Problem statement 5.2 Learning objectives 5.3 Groups 5.4 Grading 5.5 Timeline 5.6 Possible project ideas", " Chapter 5 Final project overview In this data mining project, you will choose a data mining application domain and develop a data mining pipeline for a specific problem. 5.1 Problem statement One of the goals for this course is for you to be able to design, implement, and evaluate a data mining / knowledge discovery pipeline from start to finish. You will propose and implement a data mining project in an application domain of your choice. You will be guided on your project through a series of check-in assignments (listed below), culminating in a written final report. Project survey (see blackboard, under Assignments) Project proposal Project progress report Project report draft Project final report 5.2 Learning objectives Design and implement a full data mining pipeline Develop skills for planning a data mining project and conducting background research Gain proficiency with data mining algorithms and techniques Effectively communicate your methodology and results 5.3 Groups You will be allowed to work in groups or work by yourself. I will assist in forming groups by sending out a survey asking about which topics interest you, who you would/would not like to work with (if anyone), and your expectations for your final project. 5.4 Grading 40% of your grade in this course relates to your final project: Item Contribution to grade Survey response 2.5% Project proposal 10% Project update 2.5% Draft 5% Final report 20% Note that you cannot use your homework extensions on project components. All components of your final project are subject to GVSU and the School of Computing’s academic honesty policies. Violations of these policies on your final project will likely result in failure from the course. 5.5 Timeline Week Project Component Week 5 Survey out (Monday, 02/06) Week 6 Survey due (Monday, 02/13) Week 7 Groups assigned (by Monday, 02/20) Week 8 Week 9 Spring break Week 10 Project proposal due (Wednesday, 03/15) Week 11 Receive proposal feedback (by Monday, 03/20) Week 12 Week 13 Progress report due (Wednesday, 04/05) Week 14 Project report draft due (Wednesday, 04/12) Week 15 Receive feedback on draft Week 16 Final project due (Wednesday, 04/26) 5.6 Possible project ideas I do understand that we have not covered many data mining techniques at this point in the class. However, we have overviewed broad categories of data mining tasks. My advice is to start by choosing a domain that is interesting to you and a type of data mining task that you think is applicable (and that you are interested in learning more about). You will then need to do your own research on the specifics. Some example types of projects (your project does not need to fall under any of these categories) Solve a problem E.g., Design and apply a data mining pipeline to a particular problem you are interested in, and then evaluate your approach by comparing to another method. Replicate (and/or extend) a published study E.g., identify a published study that you are interested in and independently replicate some portion of it (you must create your own pipeline to do so, not just reuse the original authors’). Answer a research question E.g., formulate a hypothesis and design (and apply) a data mining approach to test your hypothesis. Analysis E.g., design a data mining pipeline for some task (or use an existing pipeline) and analyze how/why it works (or doesn’t work). You might try swapping out individual components of the pipeline for alternative techniques, add noise to the dataset, etc, etc. E.g., design an experiment to analyze the properties of different similarity metrics and their effect on a data mining algorithm You are welcome to drop by office hours to chat about project ideas! "],["final-project---proposal.html", "Chapter 6 Final project - Proposal 6.1 Project expectations 6.2 Proposal guidelines 6.3 Grading", " Chapter 6 Final project - Proposal Your project proposal serves two purposes: for you to end up with a solid plan for your project, and for me to evaluate whether your project fits my expectations and help you to improve it where it doesn’t 6.1 Project expectations In your project, you will choose a data mining application domain and develop a data mining pipeline for a specific problem. The particular application area, techniques you choose to use, and the outputs of your project are open-ended and up to you to propose. Be creative! However, I do have the following expectations for all projects: I expect you to design and implement a complete data mining pipeline from start to finish. I expect your project to be well-researched, appropriate, and achievable in the given time frame. If you’re unsure, come chat with me during office hours! I expect you to either collect your own dataset or use a publicly available dataset. I expect you to evaluate your data mining approach in some way. Conducting a small study that compares your approach to an alternative approach, Assessing the accuracy of your model by holding back validation data, Assessing the robustness of your model, Etc. I expect you to effectively communicate your methodology and findings in a final report. This will take the form of a well-organized and well-written explanations with publication-quality visualzations. I will consider the overall difficulty of your project when determining whether or not it is sufficient (or infeasible) for your final project. For example, if your are collecting your own data, your pipeline will need to be simpler because of the extra time and effort requried for data collection. 6.2 Proposal guidelines Your project proposal should be under 3 pages, be formatted under the following headings, and address each of the following points: Project overview Provide an overview of your project. What is the application domain you are working on? What specific problem are you working on? Briefly, what is your overall approach? Why? What is your motivation? What are your goals for this project? Related work What similar projects have been attempted in your proposed domain? How do they related to your project? Data plan What data do you plan to use for your project? If you plan on collecting your own data, how do you plan to do so? If you plan to use an existing dataset, which dataset do you plan to use and why? Who collected your data and for what original purpose? What proprocessing do you expect to need to perform on your data? Implementation plan Describe your proposed data mining pipeline How will you implement your data mining pipeline? What components do you plan to use existing software/libraries for? Which software/libraries do you plan to use? Evaluation plan How do you plan to evaluate your data mining algorithm? Provide a broad overview of how you plan to evaluate your approach. How will you measure success? Will you compare to an alternative method? Measure accuracy with a ground truth testing set? Plan for group collaboration What is your plan for collaborating as a group? Do you plan to meet regularly in-person, over zoom, or coordinate asynchronously on a messaging application like discord? How do you plan to collaboratively implement your data mining pipeline? How will you manage your code and your data? Timeline Outline your week-by-week goals for completing your project by the final report deadline Feel free to communicate this timeline as a bulleted list, a table, etc. References List your references. Include a project title and the members of your group as part of your proposal. Your proposal should be organized into clearly labeled sections (one to address each of the eight categories above). Each section should be written in paragraph form (with the exception of the references and the timeline section where you may opt to use a list or a table). Your proposal will be graded on the quality of your writing as well as your answers to the previously listed prompts. It should be evident that your group has thoroughly researched the area and formulated a plan to achieve your goals. I recognize that things may change during the course of the project, but I’m looking here to make sure you have a solid initial plan. Any significant project like this requires significant prework before implementation. 6.3 Grading The proposal will be graded as follows (out of 100): Item Points Project overview section addresses required points 10 Related work section addresses required points 15 Data plan section addresses required points 10 Implementation plan section addresses required points 15 Evaluation plan section addresses required points 10 Plan for group collaboration section addresses required points 10 Timeline section addresses required points 10 Related work and references are included and cited appropriately 5 Writing is appropriately formal 5 Writing is clear 5 Proposal is well-formatted 5 I reserve the right to award flex points for exemplary work in any areas of this project. All components of your final project are subject to GVSU and the School of Computing’s academic honesty policies. Violations of these policies may result in failure from the course. You will recieve no credit for a proposal that violates the academic honesty policy in any way. "],["final-project---mid-project-update.html", "Chapter 7 Final project - Mid-project update 7.1 Requirements 7.2 Grading", " Chapter 7 Final project - Mid-project update The goal of this progress report is for you to have space to reflect on your progress so far and plan. You should be working on your final project consistently instead of leaving everything to the end of the semester. The progress report is a mechanism to make that more likely. You should not wait for my feedback on your progress update before resuming work on your project 🙂 7.1 Requirements Your progress update should be approximately one to two pages of text and address the following: Progress so far What have you completed so far? Provide a link to your data so far Provide a link to your code so far (e.g., github repository, etc) Challenges Have you run into any challenges so far? Has anything taken longer than expected? How have you overcome these challenges? If there are any current challenges you have not yet overcome, how do you plan to overcome them? Collaboration (if applicable) How frequently does your group meet? Does everyone feel like each group member is contributing meaningfully to the project? If not, how does your group plan address this problem? Next steps What do you still need to complete for your project? What is your plan to complete your project? Do you forsee any potential challenges? Organize your progress report into sections (one for each of the categories above). 7.2 Grading Graded on the following out of 100: Item Points Addressed the required points 80 Document is clearly organized 10 Writing is sufficiently formal and clear 10 All components of your final project are subject to GVSU and the School of Computing’s academic honesty policies. Violations of these policies may result in failure from the course. "],["final-project---report-draft.html", "Chapter 8 Final project - Report draft 8.1 Grading", " Chapter 8 Final project - Report draft This draft of your report is your opportunity to get my feedback on your report. Your draft does not need to be complete. I will give you feedback on it regardless of the state you turn it in (though, it does need to be well organized with proper section headings to facilitate me being able to give feedback). The more complete of a report you turn in, the more detailed feedback I can give you for what you need to do in order to earn the grade you want on your final report. For example, if you turn in a complete draft of your final report, I can tell you what grade you would receive if you turned it in as your final report and tell you where improvements can/need to be made. If your project is not complete by the time you turn in your draft, you should not wait for my feedback on your draft before resuming work on your project 🙂 8.1 Grading Your draft will be graded primarily on Effort: turned it in on time, draft contains meaningful content relevant to your final report, and it is clear that you have completed a meaningful amount of your project I can’t give meaningful feedback if you don’t submit a meaningful draft. I cannot give full credit for effort if you do not demonstrate that you have at least completed some meaningful portion of your project. Organization: clearly organized with proper section headings, text is readable I can’t give you useful feedback if your draft is not organized in a reasonable way. Graded on the following out of 100: Item Points Effort 80 Document is clearly organized 20 "],["final-project---final-report.html", "Chapter 9 Final project - Final report 9.1 Format 9.2 Contents 9.3 Deliverables 9.4 Grading", " Chapter 9 Final project - Final report Documenting your work is as important as building your data mining pipeline and generating results. If you don’t document your pipeline and your results and present them in an easily understood format, no one will ever know what you found! 9.1 Format Your final report can be prepared in a format of your choice. However, it must be clearly organized, use consistent formatting for citations/references, contain the required contents (see below), and I must be able to access it. To be safe, I would advise you to check with me before moving forward with a format. I cannot grade your report if I cannot access it. It is your responsibility to make sure that I can access it before you submit. (do not rely on me to answer my email after 5:00pm on the day your assignment is due 😉) Example formats you might choose to compose your report in: Using R markdown to create a web-accessible HTML page. This could support interactivity and allow you to embed code into your report. Using R markdown and Bookdown to create an eBook. This could support interactivity and allow you to embed code into your report. Using LaTex to create a PDF If you use LaTex, I suggest using Overleaf–it’s like google docs, but for LaTex. Using a conventional text editor to create a PDF If you plan to use this project in a larger portfolio to send to potential employers, I strongly recommend making your report into a well-formatted web page (interactive if possible). I am happy to explain how to do so if you are interested. 9.2 Contents Your report should include the following sections: Introduction Related work Methods Results and Discussion Conclusion Data and Software Availability References You can (and probably should) include subsections within those sections. You may also embed code and its output directly into your document (e.g., as you would if using R markdown). If you want to deviate from this structure for some reason, you need to speak with me ahead of time (at least a week before the deadline). Good reasons for deviating from the required sections would be if you plan to submit your work to a conference or competition that requires a different organization, you are creating an interactive document that lends itself to a different organization. Below, I outline the points you must address in each section: 9.2.1 Introduction Your introduction should: introduce your application domain and the specific problem you’re working on, providing enough background for readers to understand the value of your project motivate your project overview your approach overview your results 9.2.2 Related work Your related work section should: discuss previous work done that relates to your project. For example, alternative approaches to the problem you’re trying to solve other examples of your particular approach in your domain or in another domain include a minimum of three relevant references to academic publications Your related work should include appropriate references to academic publications (e.g., found using google scholar, pubmed, etc.) A good related work section will likely reference (and overview) several related academic publications. 9.2.3 Methods Your methods section should: describe how you chose your data and/or how you collected your data describe your data mining pipeline in sufficient detail such that someone could replicate your project What data preprocessing did you perform? Which data mining algorithms did you apply (and how)? What postprocessing did you do? describe any analyses you performed to evaluate your model describe the software You may wish to include diagrams that overview methodology. 9.2.4 Results and discussion You results and discussion section should: - describe your results - discuss how your results fit into a broader context - should include publication-quality visualizations that effectively communicate your results - Depending on the format you use for your final report, you may also wish to embed interactive visualizations. For example, you might present the performance of your data mining approach and discuss how it compares to a baseline/alternative method. 9.2.5 Conclusion Your conclusion should: very briefly summarize your findings discuss any limitations/shortcomings of your approach/experiments suggest future work (e.g., possible extensions to your project) 9.2.6 Data and software availability Your data and software availability section should: provide a working link to where your software can be found and downloaded (e.g., a github repository) provide a working link to where your data can be downloaded If either of those are not feasible for your project (e.g., you collected your own dataset and it’s huge), let me know at least a week before the deadline (the sooner you let me know, the better). 9.2.7 References Your references should be consistenly formatted such that a reader can find each reference (e.g., include authors, year, title, venue/journal, DOI). If you use Rmd, Bookdown, or LaTex to create your report, I can help you configure things such that your references are automatically formatted for you. 9.3 Deliverables Submit your report through Blackboard. If your report is a .pdf file, attach it to the submission. If your report is a live webpage, include a (working) link. One submission per group. Include in the comments section of the assignment the names of the group members. As part of your report, you will need to include working links to your code and data (e.g., in a github repository). 9.4 Grading Your final report will be graded on the following out of 100: Item Points Title accurately describes your project/findings 5 Introduction 10 Related work 10 Methods 10 Results and discussion 10 Conclusion 10 Data and software availability 10 References are consistently formatted 5 Code can be compiled/executed using provided instructions 10 Report is well-organized into proper sections, paragraphs follow logical structure 10 Report is sufficiently professional (few spelling and gramatical errors) 10 I reserve the right to award flex points for exemplary work in any areas of this project. All components of your final project are subject to GVSU and the School of Computing’s academic honesty policies. Violations of these policies may result in failure from the course. "],["references-1.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
